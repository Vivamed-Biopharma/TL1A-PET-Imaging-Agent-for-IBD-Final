# SURGICAL FIXES - CRITICAL FILE PRESERVATION

**REPOSITORY IS IN YOUR WORKING DIRECTORY. Explore with file tools first.**

═══════════════════════════════════════════════════════════════════════════════
🚨 CRITICAL PRESERVATION RULES
═══════════════════════════════════════════════════════════════════════════════

**BEFORE MAKING ANY CHANGES:**
1. Run: `find . -type f -name '*.py' | wc -l` → Save this count
2. Run: `find . -name 'run_exp*.py' -o -name 'experiment*.py' | sort` → Save list

**FILE PRESERVATION:**
- ❌ NEVER delete working experiment files
- ✅ ONLY delete specific files mentioned below

**AFTER CHANGES:**
- Recount files - if decreased by >3, YOU DELETED TOO MUCH

═══════════════════════════════════════════════════════════════════════════════
🛠️ FIX INSTRUCTIONS
═══════════════════════════════════════════════════════════════════════════════

## File-by-File Fixes

### 1. `scripts/neurosnap_client.py`
-   REPLACE file with a new production-grade client.
-   New client must handle: authentication, asynchronous job submission, status polling, result downloading, and job reuse logic.

### 2. `scripts/neurosnap_wrappers.py`
-   REPLACE file with new high-level wrappers that use the real `NeuroSnapClient`.
-   Implement wrappers for the following NeuroSnap services:
    -   `predict_toxicity` -> `eTox`
    -   `predict_aggregation` -> `Aggrescan3D`
    -   `predict_thermostability` -> `TemStaPro` (sequence-based)
    -   `predict_structure` -> `Boltz-2 (AlphaFold3)`
    -   `predict_stability_change` -> `StaB-ddG`
    -   `predict_immunogenicity` -> `DeepImmuno`

### 3. `data/fab_model.pdb`
-   ADD file.
-   Content: A representative Fab PDB structure (e.g., from PDB ID 1IGT).

### 4. `scripts/error_handling.py`
-   ADD file.
-   Content: A simple error handling module with `ValidationError` and SMILES/sequence validators.

### 5. `scripts/inputs.py`
-   DELETE flawed validation logic from the top of the file.

### 6. `scripts/03_toxicity_flags.py`
-   REPLACE mock API call in `scan_liabilities` with a call to the real `predict_toxicity` wrapper.
-   Set output directory to `results/prodrug/03_{name}_etox`.
-   ADD logic to parse the downloaded JSON result file to extract `prediction` and `probability`.

### 7. `scripts/12_interface_fingerprint.py`
-   REPLACE entire script with a new version for valid 3D analysis using the `prody` library.
-   New logic must:
    -   Load the complex PDB output from experiment 11.
    -   Select Fab (chains A, B) and Antigen (chain C).
    -   Identify interface residues (e.g., within 5 Angstroms).
    -   Calculate and report metrics like `Total_Interface_Residues` and `Hydrophobic_Ratio`.

### 8. Other Experiment Scripts
-   For `07_agg_hotspots.py`, `10_thermostability.py`, `11_complex_model.py`, `13_ala_scanning.py`, and `14_immunogenicity.py`:
    -   REPLACE mock API calls with the corresponding real function from `neurosnap_wrappers.py`.
    -   ADD logic to parse the specific scientific data formats from the real downloaded output files.

### 9. Documentation Files
-   For `README.md`, `report.md`, and `final_validation_report.md`:
    -   REPLACE/UPDATE all documentation after re-running the entire fixed pipeline.
    -   Key updates for `README.md`:
        -   Revise Executive Summary and Go/No-Go decision based on real data.
        -   Regenerate all tables and figures from new outputs.
        -   Update "How to Run" with realistic execution times (hours).
        -   Correct methodology to name the actual NeuroSnap services used.
        -   Add a new "Limitations" section.

## Validation Checks
-   [ ] Net change in Python file count is minimal (e.g., +/- 2 files).
-   [ ] `grep -r "neurosnap" scripts/` confirms no fake API logic remains in client/wrappers.
-   [ ] All `results/` subdirectories contain real output files downloaded from NeuroSnap (e.g., `scores.json`, PDB files).

═══════════════════════════════════════════════════════════════════════════════
🔬 NEUROSNAP API (REAL ONLY)
═══════════════════════════════════════════════════════════════════════════════

**API:** https://neurosnap.ai/api/
**Key:** 9d51d402d242eab91b3d0c9fe90bc8db965259b9f0b5e9e8c756c7c426688cefba682290754b94647b2c2e1001d2fa651b1cc9e0494a85d642199a015c334d45

**RULES:**
- ❌ NO mocks/fakes
- ✅ Real NeuroSnap only
- ✅ Check existing jobs first

**VALIDATION:**
- [ ] File count preserved (±3 max)
- [ ] No fake APIs
- [ ] Real outputs >1KB

PRODUCTION-READY when done.
